// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "./types";
import * as utilities from "./utilities";

/**
 * Provides an Equinix Metal facility datasource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix_metal from "@pulumi/equinix-metal";
 *
 * const ewr1 = equinix_metal.getFacility({
 *     code: "ewr1",
 * });
 * export const id = ewr1.then(ewr1 => ewr1.id);
 * ```
 */
export function getFacility(args: GetFacilityArgs, opts?: pulumi.InvokeOptions): Promise<GetFacilityResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("equinix-metal:index/getFacility:getFacility", {
        "code": args.code,
        "features": args.features,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getFacility.
 */
export interface GetFacilityArgs {
    /**
     * The facility code
     */
    readonly code: string;
    /**
     * The features of the facility
     */
    readonly features?: string[];
    /**
     * The name of the facilityg system running on the device
     */
    readonly name?: string;
}

/**
 * A collection of values returned by getFacility.
 */
export interface GetFacilityResult {
    readonly code: string;
    /**
     * The features of the facility
     */
    readonly features: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the facilityg system running on the device
     */
    readonly name: string;
}
