// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./bgpSession";
export * from "./device";
export * from "./deviceNetworkType";
export * from "./getDevice";
export * from "./getDeviceBgpNeighbors";
export * from "./getIpBlockRanges";
export * from "./getOperatingSystem";
export * from "./getOrganization";
export * from "./getPrecreatedIpBlock";
export * from "./getProject";
export * from "./getProjectSshKey";
export * from "./getSpotMarketPrice";
export * from "./getSpotMarketRequest";
export * from "./getVolume";
export * from "./ipAttachment";
export * from "./organization";
export * from "./portVlanAttachment";
export * from "./project";
export * from "./projectSshKey";
export * from "./provider";
export * from "./reservedIpBlock";
export * from "./spotMarketRequest";
export * from "./sshKey";
export * from "./vlan";
export * from "./volume";
export * from "./volumeAttachment";

// Export enums:
export * from "./types/enums";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { BgpSession } from "./bgpSession";
import { Device } from "./device";
import { DeviceNetworkType } from "./deviceNetworkType";
import { IpAttachment } from "./ipAttachment";
import { Organization } from "./organization";
import { PortVlanAttachment } from "./portVlanAttachment";
import { Project } from "./project";
import { ProjectSshKey } from "./projectSshKey";
import { ReservedIpBlock } from "./reservedIpBlock";
import { SpotMarketRequest } from "./spotMarketRequest";
import { SshKey } from "./sshKey";
import { Vlan } from "./vlan";
import { Volume } from "./volume";
import { VolumeAttachment } from "./volumeAttachment";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "equinix-metal:index/bgpSession:BgpSession":
                return new BgpSession(name, <any>undefined, { urn })
            case "equinix-metal:index/device:Device":
                return new Device(name, <any>undefined, { urn })
            case "equinix-metal:index/deviceNetworkType:DeviceNetworkType":
                return new DeviceNetworkType(name, <any>undefined, { urn })
            case "equinix-metal:index/ipAttachment:IpAttachment":
                return new IpAttachment(name, <any>undefined, { urn })
            case "equinix-metal:index/organization:Organization":
                return new Organization(name, <any>undefined, { urn })
            case "equinix-metal:index/portVlanAttachment:PortVlanAttachment":
                return new PortVlanAttachment(name, <any>undefined, { urn })
            case "equinix-metal:index/project:Project":
                return new Project(name, <any>undefined, { urn })
            case "equinix-metal:index/projectSshKey:ProjectSshKey":
                return new ProjectSshKey(name, <any>undefined, { urn })
            case "equinix-metal:index/reservedIpBlock:ReservedIpBlock":
                return new ReservedIpBlock(name, <any>undefined, { urn })
            case "equinix-metal:index/spotMarketRequest:SpotMarketRequest":
                return new SpotMarketRequest(name, <any>undefined, { urn })
            case "equinix-metal:index/sshKey:SshKey":
                return new SshKey(name, <any>undefined, { urn })
            case "equinix-metal:index/vlan:Vlan":
                return new Vlan(name, <any>undefined, { urn })
            case "equinix-metal:index/volume:Volume":
                return new Volume(name, <any>undefined, { urn })
            case "equinix-metal:index/volumeAttachment:VolumeAttachment":
                return new VolumeAttachment(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("equinix-metal", "index/bgpSession", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/device", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/deviceNetworkType", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/ipAttachment", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/organization", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/portVlanAttachment", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/project", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/projectSshKey", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/reservedIpBlock", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/spotMarketRequest", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/sshKey", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/vlan", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/volume", _module)
pulumi.runtime.registerResourceModule("equinix-metal", "index/volumeAttachment", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("equinix-metal", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:equinix-metal") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
