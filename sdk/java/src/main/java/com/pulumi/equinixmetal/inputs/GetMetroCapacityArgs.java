// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.equinixmetal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMetroCapacityArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetMetroCapacityArgs Empty = new GetMetroCapacityArgs();

    /**
     * device plan to check
     * 
     */
    @Import(name="plan", required=true)
    private Output<String> plan;

    /**
     * @return device plan to check
     * 
     */
    public Output<String> plan() {
        return this.plan;
    }

    /**
     * number of device to check
     * 
     */
    @Import(name="quantity")
    private @Nullable Output<Integer> quantity;

    /**
     * @return number of device to check
     * 
     */
    public Optional<Output<Integer>> quantity() {
        return Optional.ofNullable(this.quantity);
    }

    private GetMetroCapacityArgs() {}

    private GetMetroCapacityArgs(GetMetroCapacityArgs $) {
        this.plan = $.plan;
        this.quantity = $.quantity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMetroCapacityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMetroCapacityArgs $;

        public Builder() {
            $ = new GetMetroCapacityArgs();
        }

        public Builder(GetMetroCapacityArgs defaults) {
            $ = new GetMetroCapacityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param plan device plan to check
         * 
         * @return builder
         * 
         */
        public Builder plan(Output<String> plan) {
            $.plan = plan;
            return this;
        }

        /**
         * @param plan device plan to check
         * 
         * @return builder
         * 
         */
        public Builder plan(String plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param quantity number of device to check
         * 
         * @return builder
         * 
         */
        public Builder quantity(@Nullable Output<Integer> quantity) {
            $.quantity = quantity;
            return this;
        }

        /**
         * @param quantity number of device to check
         * 
         * @return builder
         * 
         */
        public Builder quantity(Integer quantity) {
            return quantity(Output.of(quantity));
        }

        public GetMetroCapacityArgs build() {
            $.plan = Objects.requireNonNull($.plan, "expected parameter 'plan' to be non-null");
            return $;
        }
    }

}
