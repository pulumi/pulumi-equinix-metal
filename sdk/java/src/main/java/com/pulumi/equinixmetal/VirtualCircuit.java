// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.equinixmetal;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.equinixmetal.Utilities;
import com.pulumi.equinixmetal.VirtualCircuitArgs;
import com.pulumi.equinixmetal.inputs.VirtualCircuitState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Use this resource to associate VLAN with a Dedicated Port from [Equinix Fabric - software-defined interconnections](https://metal.equinix.com/developers/docs/networking/fabric/#associating-a-vlan-with-a-dedicated-port).
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="equinix-metal:index/virtualCircuit:VirtualCircuit")
public class VirtualCircuit extends com.pulumi.resources.CustomResource {
    /**
     * UUID of Connection where the VC is scoped to
     * 
     */
    @Export(name="connectionId", type=String.class, parameters={})
    private Output<String> connectionId;

    /**
     * @return UUID of Connection where the VC is scoped to
     * 
     */
    public Output<String> connectionId() {
        return this.connectionId;
    }
    /**
     * Description for the Virtual Circuit resource
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description for the Virtual Circuit resource
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Name of the Virtual Circuit resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the Virtual Circuit resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Equinix Metal network-to-network VLAN ID
     * 
     */
    @Export(name="nniVlan", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> nniVlan;

    /**
     * @return Equinix Metal network-to-network VLAN ID
     * 
     */
    public Output<Optional<Integer>> nniVlan() {
        return Codegen.optional(this.nniVlan);
    }
    /**
     * Nni VLAN ID parameter, see https://metal.equinix.com/developers/docs/networking/fabric/
     * 
     */
    @Export(name="nniVnid", type=Integer.class, parameters={})
    private Output<Integer> nniVnid;

    /**
     * @return Nni VLAN ID parameter, see https://metal.equinix.com/developers/docs/networking/fabric/
     * 
     */
    public Output<Integer> nniVnid() {
        return this.nniVnid;
    }
    /**
     * UUID of the Connection Port where the VC is scoped to
     * 
     */
    @Export(name="portId", type=String.class, parameters={})
    private Output<String> portId;

    /**
     * @return UUID of the Connection Port where the VC is scoped to
     * 
     */
    public Output<String> portId() {
        return this.portId;
    }
    /**
     * UUID of the Project where the VC is scoped to
     * 
     */
    @Export(name="projectId", type=String.class, parameters={})
    private Output<String> projectId;

    /**
     * @return UUID of the Project where the VC is scoped to
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * Speed of the Virtual Circuit resource
     * 
     */
    @Export(name="speed", type=String.class, parameters={})
    private Output<String> speed;

    /**
     * @return Speed of the Virtual Circuit resource
     * 
     */
    public Output<String> speed() {
        return this.speed;
    }
    /**
     * Status of the virtal circuit
     * * `vnid`
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Status of the virtal circuit
     * * `vnid`
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Tags for the Virtual Circuit resource
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags for the Virtual Circuit resource
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * UUID of the VLAN to associate
     * 
     */
    @Export(name="vlanId", type=String.class, parameters={})
    private Output<String> vlanId;

    /**
     * @return UUID of the VLAN to associate
     * 
     */
    public Output<String> vlanId() {
        return this.vlanId;
    }
    /**
     * VNID VLAN parameter, see https://metal.equinix.com/developers/docs/networking/fabric/
     * 
     */
    @Export(name="vnid", type=Integer.class, parameters={})
    private Output<Integer> vnid;

    /**
     * @return VNID VLAN parameter, see https://metal.equinix.com/developers/docs/networking/fabric/
     * 
     */
    public Output<Integer> vnid() {
        return this.vnid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VirtualCircuit(String name) {
        this(name, VirtualCircuitArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VirtualCircuit(String name, VirtualCircuitArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VirtualCircuit(String name, VirtualCircuitArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix-metal:index/virtualCircuit:VirtualCircuit", name, args == null ? VirtualCircuitArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VirtualCircuit(String name, Output<String> id, @Nullable VirtualCircuitState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix-metal:index/virtualCircuit:VirtualCircuit", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VirtualCircuit get(String name, Output<String> id, @Nullable VirtualCircuitState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VirtualCircuit(name, id, state, options);
    }
}
