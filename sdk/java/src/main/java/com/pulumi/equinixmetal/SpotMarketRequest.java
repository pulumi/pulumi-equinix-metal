// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.equinixmetal;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.equinixmetal.SpotMarketRequestArgs;
import com.pulumi.equinixmetal.Utilities;
import com.pulumi.equinixmetal.inputs.SpotMarketRequestState;
import com.pulumi.equinixmetal.outputs.SpotMarketRequestInstanceParameters;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an Equinix Metal Spot Market Request resource to allow you to
 * manage spot market requests on your account. For more detail on Spot Market, see [this article in Equinix Metal documentation](https://metal.equinix.com/developers/docs/deploy/spot-market/).
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * This resource can be imported using an existing spot market request ID
 * 
 * ```sh
 *  $ pulumi import equinix-metal:index/spotMarketRequest:SpotMarketRequest metal_spot_market_request {existing_spot_market_request_id}
 * ```
 * 
 */
@ResourceType(type="equinix-metal:index/spotMarketRequest:SpotMarketRequest")
public class SpotMarketRequest extends com.pulumi.resources.CustomResource {
    /**
     * Maximum number devices to be created
     * 
     */
    @Export(name="devicesMax", type=Integer.class, parameters={})
    private Output<Integer> devicesMax;

    /**
     * @return Maximum number devices to be created
     * 
     */
    public Output<Integer> devicesMax() {
        return this.devicesMax;
    }
    /**
     * Miniumum number devices to be created
     * 
     */
    @Export(name="devicesMin", type=Integer.class, parameters={})
    private Output<Integer> devicesMin;

    /**
     * @return Miniumum number devices to be created
     * 
     */
    public Output<Integer> devicesMin() {
        return this.devicesMin;
    }
    /**
     * Facility IDs where devices should be created
     * 
     */
    @Export(name="facilities", type=List.class, parameters={String.class})
    private Output<List<String>> facilities;

    /**
     * @return Facility IDs where devices should be created
     * 
     */
    public Output<List<String>> facilities() {
        return this.facilities;
    }
    /**
     * Parameters for devices provisioned from this request. You can find the parameter description from the equinix-metal.Device doc.
     * * `billing_cycle`
     * * `plan`
     * * `operating_system`
     * * `hostname`
     * * `termintation_time`
     * * `always_pxe`
     * * `description`
     * * `features`
     * * `locked`
     * * `project_ssh_keys`
     * * `user_ssh_keys`
     * * `userdata`
     * * `customdata`
     * * `ipxe_script_url`
     * * `tags`
     * 
     */
    @Export(name="instanceParameters", type=SpotMarketRequestInstanceParameters.class, parameters={})
    private Output<SpotMarketRequestInstanceParameters> instanceParameters;

    /**
     * @return Parameters for devices provisioned from this request. You can find the parameter description from the equinix-metal.Device doc.
     * * `billing_cycle`
     * * `plan`
     * * `operating_system`
     * * `hostname`
     * * `termintation_time`
     * * `always_pxe`
     * * `description`
     * * `features`
     * * `locked`
     * * `project_ssh_keys`
     * * `user_ssh_keys`
     * * `userdata`
     * * `customdata`
     * * `ipxe_script_url`
     * * `tags`
     * 
     */
    public Output<SpotMarketRequestInstanceParameters> instanceParameters() {
        return this.instanceParameters;
    }
    /**
     * Maximum price user is willing to pay per hour per device
     * 
     */
    @Export(name="maxBidPrice", type=Double.class, parameters={})
    private Output<Double> maxBidPrice;

    /**
     * @return Maximum price user is willing to pay per hour per device
     * 
     */
    public Output<Double> maxBidPrice() {
        return this.maxBidPrice;
    }
    /**
     * Metro where devices should be created
     * 
     */
    @Export(name="metro", type=String.class, parameters={})
    private Output</* @Nullable */ String> metro;

    /**
     * @return Metro where devices should be created
     * 
     */
    public Output<Optional<String>> metro() {
        return Codegen.optional(this.metro);
    }
    /**
     * Project ID
     * 
     */
    @Export(name="projectId", type=String.class, parameters={})
    private Output<String> projectId;

    /**
     * @return Project ID
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * On resource creation - wait until all desired devices are active, on resource destruction - wait until devices are removed
     * 
     */
    @Export(name="waitForDevices", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> waitForDevices;

    /**
     * @return On resource creation - wait until all desired devices are active, on resource destruction - wait until devices are removed
     * 
     */
    public Output<Optional<Boolean>> waitForDevices() {
        return Codegen.optional(this.waitForDevices);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpotMarketRequest(String name) {
        this(name, SpotMarketRequestArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpotMarketRequest(String name, SpotMarketRequestArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpotMarketRequest(String name, SpotMarketRequestArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix-metal:index/spotMarketRequest:SpotMarketRequest", name, args == null ? SpotMarketRequestArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SpotMarketRequest(String name, Output<String> id, @Nullable SpotMarketRequestState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix-metal:index/spotMarketRequest:SpotMarketRequest", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpotMarketRequest get(String name, Output<String> id, @Nullable SpotMarketRequestState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpotMarketRequest(name, id, state, options);
    }
}
