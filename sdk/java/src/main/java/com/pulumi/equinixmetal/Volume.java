// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.equinixmetal;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.equinixmetal.Utilities;
import com.pulumi.equinixmetal.VolumeArgs;
import com.pulumi.equinixmetal.inputs.VolumeState;
import com.pulumi.equinixmetal.outputs.VolumeAttachment;
import com.pulumi.equinixmetal.outputs.VolumeSnapshotPolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource `equinix-metal.Volume` was removed in version 3.0.0, and the API support was deprecated on June 1st 2021. See https://metal.equinix.com/developers/docs/storage/elastic-block-storage/#elastic-block-storage for more details.
 * 
 */
@ResourceType(type="equinix-metal:index/volume:Volume")
public class Volume extends com.pulumi.resources.CustomResource {
    @Export(name="attachments", type=List.class, parameters={VolumeAttachment.class})
    private Output<List<VolumeAttachment>> attachments;

    public Output<List<VolumeAttachment>> attachments() {
        return this.attachments;
    }
    @Export(name="billingCycle", type=String.class, parameters={})
    private Output<String> billingCycle;

    public Output<String> billingCycle() {
        return this.billingCycle;
    }
    @Export(name="created", type=String.class, parameters={})
    private Output<String> created;

    public Output<String> created() {
        return this.created;
    }
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="facility", type=String.class, parameters={})
    private Output<String> facility;

    public Output<String> facility() {
        return this.facility;
    }
    @Export(name="locked", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> locked;

    public Output<Optional<Boolean>> locked() {
        return Codegen.optional(this.locked);
    }
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="plan", type=String.class, parameters={})
    private Output<String> plan;

    public Output<String> plan() {
        return this.plan;
    }
    @Export(name="projectId", type=String.class, parameters={})
    private Output<String> projectId;

    public Output<String> projectId() {
        return this.projectId;
    }
    @Export(name="size", type=Integer.class, parameters={})
    private Output<Integer> size;

    public Output<Integer> size() {
        return this.size;
    }
    @Export(name="snapshotPolicies", type=List.class, parameters={VolumeSnapshotPolicy.class})
    private Output</* @Nullable */ List<VolumeSnapshotPolicy>> snapshotPolicies;

    public Output<Optional<List<VolumeSnapshotPolicy>>> snapshotPolicies() {
        return Codegen.optional(this.snapshotPolicies);
    }
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> state() {
        return this.state;
    }
    @Export(name="updated", type=String.class, parameters={})
    private Output<String> updated;

    public Output<String> updated() {
        return this.updated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Volume(String name) {
        this(name, VolumeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Volume(String name, VolumeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Volume(String name, VolumeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix-metal:index/volume:Volume", name, args == null ? VolumeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Volume(String name, Output<String> id, @Nullable VolumeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix-metal:index/volume:Volume", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Volume get(String name, Output<String> id, @Nullable VolumeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Volume(name, id, state, options);
    }
}
