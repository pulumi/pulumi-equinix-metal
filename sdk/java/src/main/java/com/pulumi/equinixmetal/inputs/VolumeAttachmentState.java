// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.equinixmetal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final VolumeAttachmentState Empty = new VolumeAttachmentState();

    @Import(name="deviceId")
    private @Nullable Output<String> deviceId;

    public Optional<Output<String>> deviceId() {
        return Optional.ofNullable(this.deviceId);
    }

    @Import(name="volumeId")
    private @Nullable Output<String> volumeId;

    public Optional<Output<String>> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    private VolumeAttachmentState() {}

    private VolumeAttachmentState(VolumeAttachmentState $) {
        this.deviceId = $.deviceId;
        this.volumeId = $.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeAttachmentState $;

        public Builder() {
            $ = new VolumeAttachmentState();
        }

        public Builder(VolumeAttachmentState defaults) {
            $ = new VolumeAttachmentState(Objects.requireNonNull(defaults));
        }

        public Builder deviceId(@Nullable Output<String> deviceId) {
            $.deviceId = deviceId;
            return this;
        }

        public Builder deviceId(String deviceId) {
            return deviceId(Output.of(deviceId));
        }

        public Builder volumeId(@Nullable Output<String> volumeId) {
            $.volumeId = volumeId;
            return this;
        }

        public Builder volumeId(String volumeId) {
            return volumeId(Output.of(volumeId));
        }

        public VolumeAttachmentState build() {
            return $;
        }
    }

}
