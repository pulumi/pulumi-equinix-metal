// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource `Volume` was removed in version 3.0.0, and the API support was deprecated on June 1st 2021. See https://metal.equinix.com/developers/docs/storage/elastic-block-storage/#elastic-block-storage for more details.
func LookupVolume(ctx *pulumi.Context, args *LookupVolumeArgs, opts ...pulumi.InvokeOption) (*LookupVolumeResult, error) {
	var rv LookupVolumeResult
	err := ctx.Invoke("equinix-metal:index/getVolume:getVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolume.
type LookupVolumeArgs struct {
	Name      *string `pulumi:"name"`
	ProjectId *string `pulumi:"projectId"`
	VolumeId  *string `pulumi:"volumeId"`
}

// A collection of values returned by getVolume.
type LookupVolumeResult struct {
	BillingCycle string   `pulumi:"billingCycle"`
	Created      string   `pulumi:"created"`
	Description  string   `pulumi:"description"`
	DeviceIds    []string `pulumi:"deviceIds"`
	Facility     string   `pulumi:"facility"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                    `pulumi:"id"`
	Locked           bool                      `pulumi:"locked"`
	Name             string                    `pulumi:"name"`
	Plan             string                    `pulumi:"plan"`
	ProjectId        string                    `pulumi:"projectId"`
	Size             int                       `pulumi:"size"`
	SnapshotPolicies []GetVolumeSnapshotPolicy `pulumi:"snapshotPolicies"`
	State            string                    `pulumi:"state"`
	Updated          string                    `pulumi:"updated"`
	VolumeId         string                    `pulumi:"volumeId"`
}

func LookupVolumeOutput(ctx *pulumi.Context, args LookupVolumeOutputArgs, opts ...pulumi.InvokeOption) LookupVolumeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVolumeResult, error) {
			args := v.(LookupVolumeArgs)
			r, err := LookupVolume(ctx, &args, opts...)
			return *r, err
		}).(LookupVolumeResultOutput)
}

// A collection of arguments for invoking getVolume.
type LookupVolumeOutputArgs struct {
	Name      pulumi.StringPtrInput `pulumi:"name"`
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	VolumeId  pulumi.StringPtrInput `pulumi:"volumeId"`
}

func (LookupVolumeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeArgs)(nil)).Elem()
}

// A collection of values returned by getVolume.
type LookupVolumeResultOutput struct{ *pulumi.OutputState }

func (LookupVolumeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeResult)(nil)).Elem()
}

func (o LookupVolumeResultOutput) ToLookupVolumeResultOutput() LookupVolumeResultOutput {
	return o
}

func (o LookupVolumeResultOutput) ToLookupVolumeResultOutputWithContext(ctx context.Context) LookupVolumeResultOutput {
	return o
}

func (o LookupVolumeResultOutput) BillingCycle() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.BillingCycle }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Created }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) DeviceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVolumeResult) []string { return v.DeviceIds }).(pulumi.StringArrayOutput)
}

func (o LookupVolumeResultOutput) Facility() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Facility }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVolumeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVolumeResult) bool { return v.Locked }).(pulumi.BoolOutput)
}

func (o LookupVolumeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVolumeResult) int { return v.Size }).(pulumi.IntOutput)
}

func (o LookupVolumeResultOutput) SnapshotPolicies() GetVolumeSnapshotPolicyArrayOutput {
	return o.ApplyT(func(v LookupVolumeResult) []GetVolumeSnapshotPolicy { return v.SnapshotPolicies }).(GetVolumeSnapshotPolicyArrayOutput)
}

func (o LookupVolumeResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Updated }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.VolumeId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVolumeResultOutput{})
}
