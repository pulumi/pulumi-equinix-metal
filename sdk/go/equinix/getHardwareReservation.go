// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve a [hardware reservation resource from Equinix Metal](https://metal.equinix.com/developers/docs/deploy/reserved/).
//
// You can look up hardware reservation by its ID or by ID of device which occupies it.
func GetHardwareReservation(ctx *pulumi.Context, args *GetHardwareReservationArgs, opts ...pulumi.InvokeOption) (*GetHardwareReservationResult, error) {
	var rv GetHardwareReservationResult
	err := ctx.Invoke("equinix-metal:index/getHardwareReservation:getHardwareReservation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHardwareReservation.
type GetHardwareReservationArgs struct {
	// UUID of device occupying the reservation
	DeviceId *string `pulumi:"deviceId"`
	// ID of the hardware reservation
	Id *string `pulumi:"id"`
}

// A collection of values returned by getHardwareReservation.
type GetHardwareReservationResult struct {
	// UUID of device occupying the reservation
	DeviceId string `pulumi:"deviceId"`
	// Plan type for the reservation
	Facility string `pulumi:"facility"`
	// ID of the hardware reservation to look up
	Id string `pulumi:"id"`
	// Plan type for the reservation
	Plan string `pulumi:"plan"`
	// UUID of project this reservation is scoped to
	ProjectId string `pulumi:"projectId"`
	// Flag indicating whether the reserved server is provisionable or not. Spare devices can't be provisioned unless they are activated first
	Provisionable bool `pulumi:"provisionable"`
	// Reservation short ID
	ShortId string `pulumi:"shortId"`
	// Flag indicating whether the Hardware Reservation is a spare. Spare Hardware Reservations are used when a Hardware Reservations requires service from Metal Equinix
	Spare bool `pulumi:"spare"`
	// Switch short ID, can be used to determine if two devices are connected to the same switch
	SwitchUuid string `pulumi:"switchUuid"`
}
