// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve a virtual circuit resource from [Equinix Fabric - software-defined interconnections](https://metal.equinix.com/developers/docs/networking/fabric/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-equinix-metal/sdk/v2/go/equinix-metal"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleConnection, err := equinix - metal.GetConnection(ctx, &equinix-metal.GetConnectionArgs{
// 			ConnectionId: "4347e805-eb46-4699-9eb9-5c116e6a017d",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = equinix - metal.GetVirtualCircuit(ctx, &equinix-metal.GetVirtualCircuitArgs{
// 			VirtualCircuitId: exampleConnection.Ports[1].VirtualCircuitIds[0],
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetVirtualCircuit(ctx *pulumi.Context, args *GetVirtualCircuitArgs, opts ...pulumi.InvokeOption) (*GetVirtualCircuitResult, error) {
	var rv GetVirtualCircuitResult
	err := ctx.Invoke("equinix-metal:index/getVirtualCircuit:getVirtualCircuit", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualCircuit.
type GetVirtualCircuitArgs struct {
	// ID of the virtual circuit resource
	VirtualCircuitId string `pulumi:"virtualCircuitId"`
}

// A collection of values returned by getVirtualCircuit.
type GetVirtualCircuitResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the virtual circuit resource
	Name    string `pulumi:"name"`
	NniVlan int    `pulumi:"nniVlan"`
	NniVnid int    `pulumi:"nniVnid"`
	// ID of project to which the VC belongs
	// * `vnid`, `nniVlan`, `nniNvid` - VLAN parameters, see the [documentation for Equinix Fabric](https://metal.equinix.com/developers/docs/networking/fabric/)
	ProjectId string `pulumi:"projectId"`
	// Status of the virtal circuit
	Status           string `pulumi:"status"`
	VirtualCircuitId string `pulumi:"virtualCircuitId"`
	Vnid             int    `pulumi:"vnid"`
}
