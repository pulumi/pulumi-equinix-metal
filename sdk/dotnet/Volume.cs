// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.EquinixMetal
{
    /// <summary>
    /// Resource `equinix-metal.Volume` was removed in version 3.0.0, and the API support was deprecated on June 1st 2021. See https://metal.equinix.com/developers/docs/storage/elastic-block-storage/#elastic-block-storage for more details.
    /// </summary>
    [EquinixMetalResourceType("equinix-metal:index/volume:Volume")]
    public partial class Volume : global::Pulumi.CustomResource
    {
        [Output("attachments")]
        public Output<ImmutableArray<Outputs.VolumeAttachment>> Attachments { get; private set; } = null!;

        [Output("billingCycle")]
        public Output<string> BillingCycle { get; private set; } = null!;

        [Output("created")]
        public Output<string> Created { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("facility")]
        public Output<string> Facility { get; private set; } = null!;

        [Output("locked")]
        public Output<bool?> Locked { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("plan")]
        public Output<string> Plan { get; private set; } = null!;

        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        [Output("snapshotPolicies")]
        public Output<ImmutableArray<Outputs.VolumeSnapshotPolicy>> SnapshotPolicies { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("updated")]
        public Output<string> Updated { get; private set; } = null!;


        /// <summary>
        /// Create a Volume resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Volume(string name, VolumeArgs args, CustomResourceOptions? options = null)
            : base("equinix-metal:index/volume:Volume", name, args ?? new VolumeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Volume(string name, Input<string> id, VolumeState? state = null, CustomResourceOptions? options = null)
            : base("equinix-metal:index/volume:Volume", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Volume resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Volume Get(string name, Input<string> id, VolumeState? state = null, CustomResourceOptions? options = null)
        {
            return new Volume(name, id, state, options);
        }
    }

    public sealed class VolumeArgs : global::Pulumi.ResourceArgs
    {
        [Input("billingCycle")]
        public InputUnion<string, Pulumi.EquinixMetal.BillingCycle>? BillingCycle { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("facility", required: true)]
        public InputUnion<string, Pulumi.EquinixMetal.Facility> Facility { get; set; } = null!;

        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        [Input("plan", required: true)]
        public Input<string> Plan { get; set; } = null!;

        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        [Input("snapshotPolicies")]
        private InputList<Inputs.VolumeSnapshotPolicyArgs>? _snapshotPolicies;
        public InputList<Inputs.VolumeSnapshotPolicyArgs> SnapshotPolicies
        {
            get => _snapshotPolicies ?? (_snapshotPolicies = new InputList<Inputs.VolumeSnapshotPolicyArgs>());
            set => _snapshotPolicies = value;
        }

        public VolumeArgs()
        {
        }
        public static new VolumeArgs Empty => new VolumeArgs();
    }

    public sealed class VolumeState : global::Pulumi.ResourceArgs
    {
        [Input("attachments")]
        private InputList<Inputs.VolumeAttachmentGetArgs>? _attachments;
        public InputList<Inputs.VolumeAttachmentGetArgs> Attachments
        {
            get => _attachments ?? (_attachments = new InputList<Inputs.VolumeAttachmentGetArgs>());
            set => _attachments = value;
        }

        [Input("billingCycle")]
        public InputUnion<string, Pulumi.EquinixMetal.BillingCycle>? BillingCycle { get; set; }

        [Input("created")]
        public Input<string>? Created { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("facility")]
        public InputUnion<string, Pulumi.EquinixMetal.Facility>? Facility { get; set; }

        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("plan")]
        public Input<string>? Plan { get; set; }

        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("size")]
        public Input<int>? Size { get; set; }

        [Input("snapshotPolicies")]
        private InputList<Inputs.VolumeSnapshotPolicyGetArgs>? _snapshotPolicies;
        public InputList<Inputs.VolumeSnapshotPolicyGetArgs> SnapshotPolicies
        {
            get => _snapshotPolicies ?? (_snapshotPolicies = new InputList<Inputs.VolumeSnapshotPolicyGetArgs>());
            set => _snapshotPolicies = value;
        }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("updated")]
        public Input<string>? Updated { get; set; }

        public VolumeState()
        {
        }
        public static new VolumeState Empty => new VolumeState();
    }
}
