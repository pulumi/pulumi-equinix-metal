// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.EquinixMetal
{
    public static class GetFacility
    {
        /// <summary>
        /// Provides an Equinix Metal facility datasource.
        /// </summary>
        public static Task<GetFacilityResult> InvokeAsync(GetFacilityArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFacilityResult>("equinix-metal:index/getFacility:getFacility", args ?? new GetFacilityArgs(), options.WithVersion());

        /// <summary>
        /// Provides an Equinix Metal facility datasource.
        /// </summary>
        public static Output<GetFacilityResult> Invoke(GetFacilityInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFacilityResult>("equinix-metal:index/getFacility:getFacility", args ?? new GetFacilityInvokeArgs(), options.WithVersion());
    }


    public sealed class GetFacilityArgs : Pulumi.InvokeArgs
    {
        [Input("capacities")]
        private List<Inputs.GetFacilityCapacityArgs>? _capacities;

        /// <summary>
        /// (Optional) Ensure that queried facility has capacity for specified number of given plans
        /// </summary>
        public List<Inputs.GetFacilityCapacityArgs> Capacities
        {
            get => _capacities ?? (_capacities = new List<Inputs.GetFacilityCapacityArgs>());
            set => _capacities = value;
        }

        /// <summary>
        /// The facility code
        /// </summary>
        [Input("code", required: true)]
        public string Code { get; set; } = null!;

        [Input("featuresRequireds")]
        private List<string>? _featuresRequireds;

        /// <summary>
        /// Set of feature strings that the facility must have
        /// </summary>
        public List<string> FeaturesRequireds
        {
            get => _featuresRequireds ?? (_featuresRequireds = new List<string>());
            set => _featuresRequireds = value;
        }

        public GetFacilityArgs()
        {
        }
    }

    public sealed class GetFacilityInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("capacities")]
        private InputList<Inputs.GetFacilityCapacityInputArgs>? _capacities;

        /// <summary>
        /// (Optional) Ensure that queried facility has capacity for specified number of given plans
        /// </summary>
        public InputList<Inputs.GetFacilityCapacityInputArgs> Capacities
        {
            get => _capacities ?? (_capacities = new InputList<Inputs.GetFacilityCapacityInputArgs>());
            set => _capacities = value;
        }

        /// <summary>
        /// The facility code
        /// </summary>
        [Input("code", required: true)]
        public Input<string> Code { get; set; } = null!;

        [Input("featuresRequireds")]
        private InputList<string>? _featuresRequireds;

        /// <summary>
        /// Set of feature strings that the facility must have
        /// </summary>
        public InputList<string> FeaturesRequireds
        {
            get => _featuresRequireds ?? (_featuresRequireds = new InputList<string>());
            set => _featuresRequireds = value;
        }

        public GetFacilityInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFacilityResult
    {
        /// <summary>
        /// (Optional) Ensure that queried facility has capacity for specified number of given plans
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFacilityCapacityResult> Capacities;
        public readonly string Code;
        /// <summary>
        /// The features of the facility
        /// </summary>
        public readonly ImmutableArray<string> Features;
        public readonly ImmutableArray<string> FeaturesRequireds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The metro code the facility is part of
        /// </summary>
        public readonly string Metro;
        /// <summary>
        /// The name of the facility
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetFacilityResult(
            ImmutableArray<Outputs.GetFacilityCapacityResult> capacities,

            string code,

            ImmutableArray<string> features,

            ImmutableArray<string> featuresRequireds,

            string id,

            string metro,

            string name)
        {
            Capacities = capacities;
            Code = code;
            Features = features;
            FeaturesRequireds = featuresRequireds;
            Id = id;
            Metro = metro;
            Name = name;
        }
    }
}
