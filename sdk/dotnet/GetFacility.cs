// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.EquinixMetal
{
    public static class GetFacility
    {
        /// <summary>
        /// Provides an Equinix Metal facility datasource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using EquinixMetal = Pulumi.EquinixMetal;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var ewr1 = Output.Create(EquinixMetal.GetFacility.InvokeAsync(new EquinixMetal.GetFacilityArgs
        ///         {
        ///             Code = "ewr1",
        ///         }));
        ///         this.Id = ewr1.Apply(ewr1 =&gt; ewr1.Id);
        ///     }
        /// 
        ///     [Output("id")]
        ///     public Output&lt;string&gt; Id { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetFacilityResult> InvokeAsync(GetFacilityArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFacilityResult>("equinix-metal:index/getFacility:getFacility", args ?? new GetFacilityArgs(), options.WithVersion());
    }


    public sealed class GetFacilityArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The facility code
        /// </summary>
        [Input("code", required: true)]
        public string Code { get; set; } = null!;

        [Input("features")]
        private List<string>? _features;

        /// <summary>
        /// The features of the facility
        /// </summary>
        public List<string> Features
        {
            get => _features ?? (_features = new List<string>());
            set => _features = value;
        }

        /// <summary>
        /// The name of the facilityg system running on the device
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetFacilityArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFacilityResult
    {
        public readonly string Code;
        /// <summary>
        /// The features of the facility
        /// </summary>
        public readonly ImmutableArray<string> Features;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the facilityg system running on the device
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetFacilityResult(
            string code,

            ImmutableArray<string> features,

            string id,

            string name)
        {
            Code = code;
            Features = features;
            Id = id;
            Name = name;
        }
    }
}
