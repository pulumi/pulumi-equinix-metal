# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables

__all__ = [
    'GetFacilityResult',
    'AwaitableGetFacilityResult',
    'get_facility',
]

@pulumi.output_type
class GetFacilityResult:
    """
    A collection of values returned by getFacility.
    """
    def __init__(__self__, code=None, features=None, id=None, name=None):
        if code and not isinstance(code, str):
            raise TypeError("Expected argument 'code' to be a str")
        pulumi.set(__self__, "code", code)
        if features and not isinstance(features, list):
            raise TypeError("Expected argument 'features' to be a list")
        pulumi.set(__self__, "features", features)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def code(self) -> str:
        return pulumi.get(self, "code")

    @property
    @pulumi.getter
    def features(self) -> Sequence[str]:
        """
        The features of the facility
        """
        return pulumi.get(self, "features")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the facilityg system running on the device
        """
        return pulumi.get(self, "name")


class AwaitableGetFacilityResult(GetFacilityResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFacilityResult(
            code=self.code,
            features=self.features,
            id=self.id,
            name=self.name)


def get_facility(code: Optional[str] = None,
                 features: Optional[Sequence[str]] = None,
                 name: Optional[str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFacilityResult:
    """
    Provides an Equinix Metal facility datasource.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_equinix_metal as equinix_metal

    ewr1 = equinix_metal.get_facility(code="ewr1")
    pulumi.export("id", ewr1.id)
    ```


    :param str code: The facility code
    :param Sequence[str] features: The features of the facility
    :param str name: The name of the facilityg system running on the device
    """
    __args__ = dict()
    __args__['code'] = code
    __args__['features'] = features
    __args__['name'] = name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('equinix-metal:index/getFacility:getFacility', __args__, opts=opts, typ=GetFacilityResult).value

    return AwaitableGetFacilityResult(
        code=__ret__.code,
        features=__ret__.features,
        id=__ret__.id,
        name=__ret__.name)
